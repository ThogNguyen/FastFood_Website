@page "/cart"
@using Data.Models.ProductModels
@inject IJSRuntime jsRuntime

<PageTitle>Giỏ Hàng</PageTitle>
<!-- ... (Phần Breadcrumb như trước) ... -->
<!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="shopping__cart__table">
                    <table>
                        <thead>
                            <tr>
                                <th>Sản Phẩm</th>
                                <th>Số Lượng</th>
                                <th>Thành Tiền</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (CartItems != null)
                            {
                                @foreach (var product in CartItems)
                                {
                                    <tr>
                                        <td class="product__cart__item">
                                            <div class="product__cart__item__pic">
                                                <img src="/client/img/shop/@product.Image" alt="">
                                            </div>
                                            <div class="product__cart__item__text">
                                                <h6>@product.ProductName</h6>
                                                <h5>$@product.Price.ToString("0.00")</h5>
                                            </div>
                                        </td>
                                        <td class="quantity__item">
                                            <div class="quantity">
                                                <div class="pro-qty">
                                                    <input type="text" @bind="quantity">
                                                </div>
                                            </div>
                                        </td>
                                        <td class="cart__price">$@(product.Price * quantity).ToString("0.00")</td>
                                        <td class="cart__close">
                                            <a href="#" @onclick="@(() => RemoveFromCart(product.Id))">
                                                <span class="icon_close"></span>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="4" class="text-center">Giỏ hàng trống</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- ... (Phần continue__btn như trước) ... -->
            </div>
            <div class="col-lg-4">
                <!-- ... (Phần cart__discount và cart__total như trước) ... -->
            </div>
        </div>
    </div>
</section>
<!-- Shopping Cart Section End -->
@code {
    private List<ProductForView> CartItems { get; set; } = new List<ProductForView>();
    private decimal TotalPrice { get; set; }
    private int quantity { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // 1. Lấy danh sách sản phẩm từ session
            var cartItemsJson = await jsRuntime.InvokeAsync<string>("sessionStorage.getItem", "cart");
            if (!string.IsNullOrEmpty(cartItemsJson))
            {
                CartItems = System.Text.Json.JsonSerializer.Deserialize<List<ProductForView>>(cartItemsJson);
            }

            // 2. Tính tổng tiền
            CalculateTotalPrice();
        }
    }

    private void CalculateTotalPrice()
    {
        TotalPrice = CartItems.Sum(p => p.Price * quantity);
    }

    private void RemoveFromCart(Guid productId)
    {
        CartItems.RemoveAll(p => p.Id == productId);
        CalculateTotalPrice();
        // Cập nhật session (nếu cần)
    }

    private void UpdateCart()
    {
        CalculateTotalPrice();
        // Cập nhật session (nếu cần)
    }
}