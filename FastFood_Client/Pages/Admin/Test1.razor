@page "/counterform"
@layout AdminLayout

@inject IJSRuntime JSRuntime

<!-- Page content -->
<div class="row">
    <div class="col-md-12 m-b-30">
        <div class="d-block d-sm-flex flex-nowrap align-items-center">
            <div class="page-title mb-2 mb-sm-0">
                <h1>Counter Form</h1>
            </div>
        </div>
    </div>
</div>

<div class="form-group mb-3">
    <a href="products" class="tabledit-edit-button btn btn-danger">
        Trở về
    </a>
</div>

<div class="row">
    <div class="col-lg-8 mx-auto">
        <div class="card card-statistics">
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label for="counterValue">Counter Value</label>
                            <InputText class="form-control" id="counterValue" @bind-Value="countString" readonly />
                        </div>
                    </div>
                </div>

                <button class="btn btn-primary" @onclick="IncrementCount">Increment Count</button>
            </div>
        </div>
    </div>
</div>

<!-- New EditForm for User Data -->
<div class="row mt-4">
    <div class="col-lg-8 mx-auto">
        <div class="card card-statistics">
            <div class="card-body">
                <EditForm Model="@userData" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="form-group">
                        <label for="name">Name</label>
                        <InputText class="form-control" id="name" @bind-Value="userData.Name" />
                        <ValidationMessage For="@(() => userData.Name)" />
                    </div>

                    <div class="form-group">
                        <label for="email">Email</label>
                        <InputText class="form-control" id="email" @bind-Value="userData.Email" />
                        <ValidationMessage For="@(() => userData.Email)" />
                    </div>

                    <button type="submit" class="btn btn-primary">Submit</button>
                    <button type="button" class="btn btn-secondary" @onclick="CallJsFunction">Display Data</button>
                </EditForm>

                @if (isSubmitted)
                {
                    <div class="mt-4">
                        <h4>Submitted Data:</h4>
                        <p><strong>Name:</strong> @userData.Name</p>
                        <p><strong>Email:</strong> @userData.Email</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private int count = 0;

    private string countString
    {
        get => count.ToString();
        set
        {
            if (int.TryParse(value, out int newCount))
            {
                count = newCount;
            }
        }
    }

    private void IncrementCount()
    {
        count++;
    }

    private UserData userData = new UserData();
    private bool isSubmitted = false;

    private void HandleValidSubmit()
    {
        isSubmitted = true;
    }

    public class UserData
    {
        public string Name { get; set; }
        public string Email { get; set; }
    }

    private async Task CallJsFunction()
    {
        await JSRuntime.InvokeVoidAsync("displayEnteredData");
    }
}
