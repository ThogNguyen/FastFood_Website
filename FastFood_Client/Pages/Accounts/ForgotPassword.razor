@page "/forgotpassword"
@layout NullLayout
@inject IHttpAccountService AccountService
@inject NavigationManager NavigationManager

@* Form model *@
@using Data.Models.AccountModels
@using FastFood_Client.HttpRepositories.Interfaces

<div class="row no-gutters">
    <div class="col-sm-6 col-lg-5 col-xxl-4 align-self-center order-2 order-sm-1">
        <div class="d-flex align-items-center h-100-vh">
            <div class="login p-50">
                <h3>Input your email to send request to change password.</h3>
                <EditForm Model="@forgotPasswordModel" OnValidSubmit="HandleValidSubmit" class="mt-3 mt-sm-5">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                <label class="control-label">Email*</label>
                                <InputText type="email" class="form-control" placeholder="abc@gmail.com" @bind-Value="forgotPasswordModel.Email" />
                                <ValidationMessage For="@(() => forgotPasswordModel.Email)" />
                            </div>
                        </div>
                        <div class="col-12 mt-3">
                            <button type="submit" class="btn btn-primary text-uppercase w-100">Send</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-xxl-8 col-lg-7 bg-gradient o-hidden order-1 order-sm-2">
        <div class="row align-items-center h-100">
            <div class="col-7 mx-auto ">
                <img class="img-fluid" src="/admin/assets/img/bg/login.svg" alt="">
            </div>
        </div>
    </div>
</div>

@code {
    private ForgotPasswordVM forgotPasswordModel = new ForgotPasswordVM();

    private async Task HandleValidSubmit()
    {
        await AccountService.ForgotPasswordAsync(forgotPasswordModel);
    }
}
